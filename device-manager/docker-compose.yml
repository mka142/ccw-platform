services:
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.0
    container_name: ccw_traefik
    restart: unless-stopped
    command:
      # Docker provider
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      # API and Dashboard
      # - --api.dashboard=true
      # - --api.insecure=true
      
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.mqtt.address=:1883
      
      # Redirect HTTP to HTTPS
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      
      # Let's Encrypt
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json


      # Logging
      - --log.level=INFO
      - --accesslog=true
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "1883:1883" # MQTT
      - "3001:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt-data:/letsencrypt
    networks:
      - ccw-network

  # Device Manager Application
  device-manager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ccw_device_manager
    restart: unless-stopped
    expose:
      - "3001"    # HTTP/WebSocket server (internal only)
      - "1883"  # MQTT broker (internal only)
    environment:
      NODE_ENV: production
      PORT: 3001
      HOST: 0.0.0.0
      
      # Admin Authentication
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      
      # MQTT Configuration
      MQTT_HOST: 0.0.0.0
      MQTT_PORT: 1883
      MQTT_SERVER_PASSWORD: ${MQTT_SERVER_PASSWORD}
      MQTT_WS_PATH: /mqtt
      
      # Database Configuration
      DATABASE_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017
      DATABASE_NAME: ${DATABASE_NAME}
      
      # API Configuration
      API_USER_ID_HEADER: X-User-Id
      CORS_ORIGIN: ${DEVICE_MANAGER_CORS_ORIGIN}
      
      # Monitoring
      MONITORING_INTERVAL_MS: 60000
    depends_on:
      - mongo
      - traefik
    networks:
      - ccw-network
    labels:
      # Enable Traefik
      
      # HTTP/HTTPS + WebSocket support - HTTP Router
      - "traefik.enable=true"
      - "traefik.http.routers.device-manager.rule=Host(`${DEVICE_MANAGER_HOST}`)"
      - "traefik.http.routers.device-manager.tls.certresolver=letsencrypt"
      - "traefik.http.routers.device-manager.service=device-manager"
      - "traefik.http.services.device-manager.loadbalancer.server.port=3001"
      
      # MQTT TCP passthrough
      - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt.entrypoints=mqtt"
      - "traefik.tcp.routers.mqtt.service=device-manager-mqtt"
      - "traefik.tcp.services.device-manager-mqtt.loadbalancer.server.port=1883"

  # MongoDB Database
  mongo:
    image: mongo:7
    restart: unless-stopped
    container_name: ccw_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    expose:
      - "27017"  # Internal only
    volumes:
      - mongo-data:/data/db
    networks:
      - ccw-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Admin Interface
  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    container_name: ccw_mongo_express
    expose:
      - "8081"  # Internal only
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
      - traefik
    networks:
      - ccw-network
    labels:
      # Optional: Expose mongo-express via HTTPS
      - "traefik.enable=true"
      - "traefik.http.routers.mongo-express.rule=Host(`${MONGO_HOST}`)"
      - "traefik.http.routers.mongo-express.tls.certresolver=letsencrypt"
      - "traefik.http.routers.mongo-express.service=mongo-express"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8081"

networks:
  ccw-network:
    driver: bridge
  traefik_internal:

volumes:
  mongo-data:
    driver: local
  letsencrypt-data:
    driver: local